{"version":3,"file":"ord.and.typeclass.js","sourceRoot":"","sources":["../ord.and.typeclass.ts"],"names":[],"mappings":";;;;;;AAAA,8BAAoC,iBAAiB,CAAC,CAAA;AAEtD;IAA4B,0BAAG;IAA/B;QAA4B,8BAAG;IAkB/B,CAAC;IAhBoB,YAAK,GAAtB,UAAuB,MAAa;QAChC,MAAM,CAAC,UAAU,CAAM,EAAE,MAAkB;YACvC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,GAAG,gCAAgC,CAAC,CAAC;YAC3E,CAAC;YACD,IAAI,GAAG,GAAW,IAAI,CAAC;YACvB,GAAG,CAAC,CAAc,UAAgB,EAAhB,KAAA,MAAM,CAAC,SAAS,EAAhB,cAAgB,EAAhB,IAAgB,CAAC;gBAA9B,IAAI,KAAK,SAAA;gBACV,IAAI,GAAG,GAAG,CAAC,MAAM,KAAK,SAAS,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAChF,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;oBACf,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;wBAAC,MAAM,CAAC,KAAK,CAAC;oBACvB,GAAG,GAAG,IAAI,CAAC;gBACf,CAAC;aACJ;YACD,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAA;IACL,CAAC;IACL,aAAC;AAAD,CAAC,AAlBD,CAA4B,mBAAG,GAkB9B;AAlBY,cAAM,SAkBlB,CAAA","sourcesContent":["import {Ord, IOrd, IOrdConfig} from \"./ord.typeclass\";\n\nexport class OrdAnd extends Ord {\n\n    protected static _impl(method:string):(a:IOrd, config?:IOrdConfig)=>(any|any) {\n        return function (a:IOrd, config?:IOrdConfig) {\n            if (!config) {\n                throw new Error(\"Method \" + method + \" cannot be run without config.\");\n            }\n            let res:boolean = null;\n            for (let field of config.ordFields) {\n                let val = (method === \"greater\") ? field.greater(this, a) : field.less(this, a);\n                if (val !== null) {\n                    if (!val) return false;\n                    res = true;\n                }\n            }\n            return res;\n        }\n    }\n}\n"]}