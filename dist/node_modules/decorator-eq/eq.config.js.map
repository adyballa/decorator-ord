{"version":3,"file":"eq.config.js","sourceRoot":"","sources":["../../../node_modules/decorator-eq/eq.config.ts"],"names":[],"mappings":";;;;;;AAAA,6BAAwE,gBAAgB,CAAC,CAAA;AAEzF;IAEI,iBAAmB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAC9B,CAAC;IAEM,oBAAE,GAAT,UAAU,CAAK,EAAE,CAAK;QAClB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI;YAChD,CAAC,mBAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAU,IAAI,CAAC,CAAC,CAAE,CAAC,EAAE,CAAO,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAEM,qBAAG,GAAV,UAAW,CAAK,EAAE,CAAK;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;IACxC,CAAC;IAEM,uBAAK,GAAZ,UAAa,MAAU;QACnB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,uBAAK,GAAZ;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACL,cAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,eAAO,UAuBnB,CAAA;AAED;IAAkC,gCAAO;IAAzC;QAAkC,8BAAO;IAsBzC,CAAC;IApBU,yBAAE,GAAT,UAAU,CAAK,EAAE,CAAK;QAClB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,mBAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAQ,IAAI,CAAC,CAAC,CAAE,CAAC,EAAE,CAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;YAC5C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,IAAI,CAAW,IAAI,CAAC,CAAC,CAAE,CAAC,OAAO,CAAU,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;gBACjH,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEM,4BAAK,GAAZ;QACI,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IACL,mBAAC;AAAD,CAAC,AAtBD,CAAkC,OAAO,GAsBxC;AAtBY,oBAAY,eAsBxB,CAAA;AAED;IAAA;QAEc,YAAO,GAAiB,EAAE,CAAC;IAmBzC,CAAC;IAjBG,sBAAW,4BAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,MAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC;;;OAJA;IAMM,wBAAK,GAAZ;QACI,IAAM,GAAG,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAY;YAC9B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,MAAM,GAAC,CAAC,CAAC;QACb,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,eAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,gBAAQ,WAqBpB,CAAA","sourcesContent":["import {IEq, isEq, IField, IEqConfig, TFieldValue, IFieldProperty} from \"./eq.interface\";\n\nexport class EqField implements IField {\n\n    constructor(public name:string) {\n    }\n\n    public eq(a:IEq, b:IEq):boolean {\n        let vals = [this.value(a), this.value(b)];\n        return (vals[0] === null || vals[1] === null) ? null :\n            (isEq(vals[0])) ? (<IEq> vals[0]).eq(<IEq> vals[1]) : (vals[0] === vals[1]);\n    }\n\n    public neq(a:IEq, b:IEq):boolean {\n        let val = this.eq(a, b);\n        return (val === null) ? null : !val;\n    }\n\n    public value(object:IEq):TFieldValue {\n        return object[this.name];\n    }\n\n    public clone():EqField{\n        return new EqField(this.name);\n    }\n}\n\nexport class FuzzyEqField extends EqField {\n\n    public eq(a:IEq, b:IEq):boolean {\n        let vals = [this.value(a), this.value(b)];\n        if (vals[0] === null || vals[1] === null) {\n            return null;\n        } else {\n            if (isEq(vals[0])) {\n                return (<IEq> vals[0]).eq(<IEq> vals[1])\n            } else {\n                if (vals[0] === vals[1]) {\n                    return true;\n                } else {\n                    return ((typeof vals[0] === \"string\") && ((<string> vals[1]).indexOf(<string> vals[0]) > -1)) ? null : false;\n                }\n            }\n        }\n    }\n\n    public clone():EqField{\n        return new FuzzyEqField(this.name);\n    }\n}\n\nexport class EqConfig implements IEqConfig {\n\n    protected _fields:Array<IField> = [];\n\n    public get fields():Array<IField> {\n        return this._fields;\n    }\n\n    public set fields(fields:Array<IField>) {\n        this._fields = fields;\n    }\n\n    public clone():EqConfig{\n        const res = new EqConfig();\n        let f : Array<IField> = [];\n        this._fields.forEach((field:IField) =>{\n            f.push(field.clone());\n        });\n        res.fields=f;\n        return res;\n    }\n}\n"]}