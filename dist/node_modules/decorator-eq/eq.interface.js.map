{"version":3,"file":"eq.interface.js","sourceRoot":"","sources":["../../../node_modules/decorator-eq/eq.interface.ts"],"names":[],"mappings":";AAkBA,cAAqB,MAAU;IAC3B,MAAM,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC;AAC7E,CAAC;AAFe,YAAI,OAEnB,CAAA","sourcesContent":["export interface IEq {\n    [name:string]:any;\n    eq(a:IEq):boolean,\n    eq(a:IEq, config:IEqConfig):boolean;\n    neq(a:IEq):boolean\n    neq(a:IEq, config:IEqConfig):boolean;\n}\n\nexport interface IFieldProperty {\n    fuzzy?:boolean\n}\n\nexport interface IEqProps {\n    config?:IEqConfig;\n}\n\nexport type TFieldValue = number | string | IEq;\n\nexport function isEq(object:any):object is IEq {\n    return (typeof object === 'object' && 'eq' in object && 'neq' in object);\n}\n\nexport interface IEqConfig {\n    fields:Array<IField>,\n    clone:()=>IEqConfig\n}\n\nexport interface IField {\n    name:string;\n    eq:(a:IEq, b:IEq)=>boolean;\n    neq:(a:IEq, b:IEq)=>boolean;\n    value:(object:IEq)=>TFieldValue;\n    clone:()=>IField;\n}\n"]}