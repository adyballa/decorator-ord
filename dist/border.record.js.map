{"version":3,"file":"border.record.js","sourceRoot":"","sources":["../border.record.ts"],"names":[],"mappings":";;;;;;AAAA,gCAA6B,mBAAmB,CAAC,CAAA;AAGjD;IAAkC,gCAAsB;IAAxD;QAAkC,8BAAsB;QAE1C,YAAO,GAAU,CAAC,CAAC;IAqCjC,CAAC;IAjCa,8BAAO,GAAjB,UAAkB,SAAgB,EAAE,MAAa,EAAE,KAAY,EAAE,IAAY;QACzE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;cAC7E,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;cACnE,UAAU,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;cAC7E,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;cACnE,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAES,4BAAK,GAAf,UAAgB,SAAgB,EAAE,MAAa,EAAE,KAAY;QACzD,GAAG,CAAA,CAAU,UAAqB,EAArB,KAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAArB,cAAqB,EAArB,IAAqB,CAAC;YAA/B,IAAI,CAAC,SAAA;YACL,EAAE,CAAA,CAAC,CAAC,CAAC,IAAI,KAAG,SAAS,CAAC,CAAA,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;sBAC/D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;YACjD,CAAC;SACJ;IACL,CAAC;IAEM,6BAAM,GAAb,UAAc,SAAgB,EAAE,MAAa,EAAE,KAAY,EAAE,IAAY;QACrE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,CAAC;aACtC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAEM,sCAAe,GAAtB,UAAuB,EAAS,EAAE,MAAiB;QAC/C,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,GAAG,CAAC,CAAU,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE,CAAC;YAAZ,IAAI,CAAC,WAAA;YACN,GAAG,CAAC,CAAc,UAAa,EAAb,KAAA,MAAM,CAAC,MAAM,EAAb,cAAa,EAAb,IAAa,CAAC;gBAA3B,IAAI,KAAK,SAAA;gBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAW,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;SACJ;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,AAvCD,CAAkC,gCAAc,GAuC/C;AAvCY,oBAAY,eAuCxB,CAAA","sourcesContent":["import {AbstractRecord} from \"./abstract.record\";\r\nimport {IOrd, IOrdConfig} from \"./ord.interface\";\r\n\r\nexport class BorderRecord extends AbstractRecord<number> {\r\n\r\n    protected initVal:number = 0;\r\n\r\n    protected config:IOrdConfig;\r\n\r\n    protected _record(fieldName:string, method:string, value:string, data?:Object) {\r\n        this.results[fieldName][method]['min'] = ('min' in this.results[fieldName][method])\r\n            ? Math.min(this.results[fieldName][method]['min'], parseFloat(value))\r\n            : parseFloat(value);\r\n        this.results[fieldName][method]['max'] = ('max' in this.results[fieldName][method])\r\n            ? Math.max(this.results[fieldName][method]['max'], parseFloat(value))\r\n            : parseFloat(value);\r\n    }\r\n\r\n    protected _play(fieldName:string, method:string, value:string):any {\r\n        for(let f of this.config.ordFields){\r\n            if(f.name===fieldName){\r\n                return (f.map.length) ? f.map[this.results[fieldName][method][value]]\r\n                    : this.results[fieldName][method][value];\r\n            }\r\n        }\r\n    }\r\n\r\n    public record(fieldName:string, method:string, value:string, data?:Object) {\r\n        this.guarantee(this.results, fieldName, {})\r\n            .guarantee(this.results[fieldName], method, {});\r\n        this._record(fieldName, method, value, data);\r\n    }\r\n\r\n    public recordOrdConfig(cs:IOrd[], config:IOrdConfig) {\r\n        this.reset();\r\n        this.config=config;\r\n        for (let c of cs) {\r\n            for (let field of config.fields) {\r\n                this.record(field.name, \"eq\", <string> field.value(c));\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}