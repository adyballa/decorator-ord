{"version":3,"file":"count.record.js","sourceRoot":"","sources":["../count.record.ts"],"names":[],"mappings":";;;;;;AAAA,gCAA6B,mBAAmB,CAAC,CAAA;AAGjD;IAAiC,+BAAsB;IAAvD;QAAiC,8BAAsB;QAEzC,YAAO,GAAU,CAAC,CAAC;IAWjC,CAAC;IATa,6BAAO,GAAjB,UAAkB,SAAgB,EAAE,MAAa,EAAE,KAAY,EAAE,IAAY;QACzE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;IAC7C,CAAC;IAEM,qCAAe,GAAtB,UAAuB,EAAS,EAAE,MAAiB;QAAnD,iBAIC;QAHG,EAAE,CAAC,OAAO,CAAC,UAAC,CAAM;YACd,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAA5C,CAA4C,CAAC,CAAA;QAClF,CAAC,CAAC,CAAC;IACP,CAAC;IACL,kBAAC;AAAD,CAAC,AAbD,CAAiC,gCAAc,GAa9C;AAbY,mBAAW,cAavB,CAAA","sourcesContent":["import {AbstractRecord} from \"./abstract.record\";\nimport {IOrd, IOrdConfig} from \"./ord.interface\";\n\nexport class CountRecord extends AbstractRecord<number> {\n\n    protected initVal:number = 0;\n\n    protected _record(fieldName:string, method:string, value:string, data?:Object) {\n        this.results[fieldName][method][value]++;\n    }\n\n    public recordOrdConfig(cs:IOrd[], config:IOrdConfig) {\n        cs.forEach((c:IOrd) => {\n            config.fields.forEach((field) => this.record(field.name, \"eq\", c[field.name]))\n        });\n    }\n}\n"]}